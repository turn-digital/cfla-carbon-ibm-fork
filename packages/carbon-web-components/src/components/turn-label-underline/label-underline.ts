/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement, html } from 'lit';
import { prefix } from '../../globals/settings';
import styles from './label-underline.scss';
import { property } from 'lit/decorators.js';
import { carbonElement as customElement } from '../../globals/decorators/carbon-element';

interface NotificationItem {
  type: string;
  count: number;
}

/**
 * Related documents.
 *
 * @element cds-label-underline
 */

@customElement(`${prefix}-label-underline`)
class CDSLabelValue extends LitElement {
  @property({ type: String }) label = '';
  @property({ type: Array }) notifications: NotificationItem[] = [];

  render() {
    return html`
      <div class="label-underline">
        <div class="label-underline__label-box">
          <div class="label-underline__label">
            ${this.label}
          </div>
          ${this.notifications.length > 0 ? html`
            <div class="label-underline__notifications">
              ${this.notifications.map(
                (item) => html`
                  <div class="label-underline__tag ${item.type ? `label-underline__tag--${item.type}` : ''}">
                    ${item.count}
                  </div>
                `
              )}
            </div>
          ` : ''}
        </div>
      </div>

        <div class="label-underline__underline"></div>
      </div>
    `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default CDSLabelValue;
