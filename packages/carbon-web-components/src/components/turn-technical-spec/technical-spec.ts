/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement, html } from 'lit';
import { prefix } from '../../globals/settings';
import styles from './technical-spec.scss';
import { property } from 'lit/decorators.js';
import { carbonElement as customElement } from '../../globals/decorators/carbon-element';

import WarningHex16 from '@carbon/icons/lib/warning--hex/16';
import Tools16 from '@carbon/icons/lib/tools/16';
import Partial16 from '@carbon/icons/lib/watson-health/status--partial-fail/16';

/**
 * Technical Specifiation
 *
 * @element cds-technical-spec
 */

@customElement(`${prefix}-technical-spec`)
class CDSTechSpec extends LitElement {
  /**
   * Types: tehnical-specification, clarification, requirement
   */
  @property({ type: String }) type = '';

  /**
   * Status can be "disabled" to set disabled state
   */
  @property({ type: String }) status = '';
  @property({ type: String }) label = '';



  render() {
    const isDisabled = this.status === 'disabled';
    const iconClass = isDisabled ? 'technical-spec__icon--disabled' : '';
    const typeClass = isDisabled ? 'technical-spec__type--disabled' : '';

    return html`
      <div class="technical-spec">
        <div class="technical-spec__wrapper">
          <div class="technical-spec__box">
            <div class="technical-spec__icon ${iconClass}">${this.renderIcon()}</div>
            <div class="technical-spec__type ${typeClass}">${this.renderType()}</div>
          </div>
          <div class="technical-spec__label">${this.label}</div>
        </div>
      </div>
    `;
  }


  renderIcon() {
    switch (this.type) {
      case 'tehnical-specification':
        return html`${Tools16()}`;
      case 'clarification':
        return html`${Partial16()}`;
      case 'requirement':
        return html`${WarningHex16()}`;
      default:
        return html`${WarningHex16()}`;
    }
  }

  renderType() {
    switch (this.type) {
      case 'tehnical-specification':
        return 'Tehniskais precizējums';
      case 'clarification':
        return 'Precizējums';
      case 'requirement':
        return 'Nosacījums';
      default:
        return 'Pievienots';
    }
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default CDSTechSpec;
