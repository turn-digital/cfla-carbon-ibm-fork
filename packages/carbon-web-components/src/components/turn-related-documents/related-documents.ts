/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement, html } from 'lit';
import { property, query } from 'lit/decorators.js';
import { prefix } from '../../globals/settings';
import FocusMixin from '../../globals/mixins/focus';
import styles from './related-documents.scss';
import { carbonElement as customElement } from '../../globals/decorators/carbon-element';
import Launch16 from '@carbon/icons/lib/launch/16';
import { unsafeHTML } from 'lit-html/directives/unsafe-html.js';
import DOMPurify from 'dompurify';



/**
 * Related documents.
 *
 * @element cds-related-documents
 */
@customElement(`${prefix}-related-documents`)
class CDSRelatedDocuments extends FocusMixin(LitElement) {

  @property() title = 'SaistÄ«tie dokumenti';
  @property() documents = [
    {
      linkUrl: "www.example.com/doc1",
      linkTitle: "Document 1 Title",
      linkIcon: "Icon 1",
      target: "_blank"
    },
    {
      linkUrl: "www.example.com/doc2",
      linkTitle: "Document 2 Title",
      linkIcon: "Icon 2"
    },
  ];

  
  sanitizeIcon(icon) {
    return DOMPurify.sanitize(icon, { ADD_TAGS: ['svg'], ADD_ATTR: ['xmlns'] });
  }

  /**
 * Handles `slotchange` event.
 */
  // protected _handleSlotChange({ target }: Event) {
  //   const { name } = target as HTMLSlotElement;
  //   const hasContent = (target as HTMLSlotElement)
  //     .assignedNodes()
  //     .some(
  //       (node) => node.nodeType !== Node.TEXT_NODE || node!.textContent!.trim()
  //     );
  //   this.requestUpdate();
  // }


  render() {
    // const { _handleSlotChange: handleSlotChange } = this;
    return html`
      <div class="documents">
        <cds-page-title title="${this.title}"></cds-page-title>
        <ul class="documents__links">
         
          ${this.documents.map(document => html`
            <li class="documents__links-item">
              <span class="documents__link-icon">${unsafeHTML(this.sanitizeIcon(document.linkIcon))}</span>
              <cds-link
                href="${document.linkUrl}"
                target="${document.target || '_self'}">
                ${document.linkTitle}
              </cds-link>
              <span ?hidden="${document.target !== '_blank'}" class="">
                ${Launch16()}
              </span>
            </li>
          `)}

        </ul>
      </div>
    `;
  }
  

//   <div ?hidden="${document.target === '_blank'}" class="${prefix}--link__icon-out">
//   <slot name="icon" @slotchange="${handleSlotChange}"></slot>
// </div>

  // static shadowRootOptions = {
  //   ...LitElement.shadowRootOptions,
  //   delegatesFocus: true,
  // };
  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default CDSRelatedDocuments;
