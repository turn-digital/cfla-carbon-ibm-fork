/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement, html } from 'lit';
import { prefix } from '../../globals/settings';
import styles from './countdown-timer.scss';
import { property } from 'lit/decorators.js';
import { carbonElement as customElement } from '../../globals/decorators/carbon-element';

/**
 * Related documents.
 *
 * @element cds-countdown-timer
 */

@customElement(`${prefix}-countdown-timer`)
class CDSCountdownTimer extends LitElement {
  @property({ type: Object }) countdownDate = {
    years: 0,
    days: 0,
    hours: 0,
    minutes: 0,
  };
  @property({ type: String }) deadline = '';

  render() {
    // const apiDate = new Date(iesniegsanasTermins);
    const deadline = new Date(`${this.deadline}`);

    const formattedDate = `${(deadline.getMonth() + 1)
      .toString()
      .padStart(2, '0')}.${deadline
      .getDate()
      .toString()
      .padStart(2, '0')}.${deadline.getFullYear()} ${deadline
      .getHours()
      .toString()
      .padStart(2, '0')}:${deadline.getMinutes().toString().padStart(2, '0')}`;

    const currentDate = new Date();
    const isDeadlineOver = deadline.getTime() < currentDate.getTime();

    //@ts-ignore
    const timeDifference = deadline - currentDate;

    const years = Math.floor(timeDifference / (365.25 * 24 * 60 * 60 * 1000));
    const days = Math.floor(
      (timeDifference % (365.25 * 24 * 60 * 60 * 1000)) / (24 * 60 * 60 * 1000)
    );
    const hours = Math.floor(
      (timeDifference % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000)
    );
    const minutes = Math.floor(
      (timeDifference % (60 * 60 * 1000)) / (60 * 1000)
    );

    this.countdownDate = { years, days, hours, minutes };
    return html`
      ${isDeadlineOver
        ? html`<div class="countdown-timer">
            <p class="countdown-timer__overdue">Laiks ir beidzies</p>
          </div>`
        : html`<div class="countdown-timer">
            <div class="countdown-timer__title">
              Atlikušais laiks līdz iesniegšanai
            </div>
            <div class="countdown-timer__time-left">
              ${this.countdownDate.days !== 0
                ? `${this.countdownDate.days} dienas ${this.countdownDate.hours}:${this.countdownDate.minutes}`
                : `${this.countdownDate.hours}:${this.countdownDate.minutes}`}
            </div>
            <div class="countdown-timer__time-actual">${formattedDate}</div>
          </div>`}
    `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default CDSCountdownTimer;
